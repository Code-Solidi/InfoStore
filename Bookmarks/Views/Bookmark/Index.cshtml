@using System.Web
@using CommonMark;
@using Microsoft.AspNetCore.Html
@using System.IO
@using System.Text.Encodings.Web

@model BookmarkListModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Bookmarks</h1>
    <p>&mdash;&nbsp;Never loose your bookmarks again&nbsp;&mdash;</p>
</div>

<div class="accordion mb-3" id="accordion">
    <div class="accordion-item">
        <h2 class="accordion-header card-title" id="panels-headingOne">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panels-collapseOne" aria-expanded="false" aria-controls="panels-collapseOne">
                <strong>Filter</strong>
            </button>
        </h2>
        <div id="panels-collapseOne" class="accordion-collapse collapse" aria-labelledby="panels-headingOne">
            <div class="accordion-body">
                <partial name="_Filter" model=@this.Model />
            </div>
        </div>
    </div>
</div>

<form asp-action="Index">
    <div class="form-group row mb-3">
        <div class="col-11">
            <input asp-for="Url" class="form-control" placeholder="Enter the URL to bookmark" />
            <div class="text-danger">@this.GetString(Html.ValidationMessageFor(x => x.Url))</div>
        </div>
        <div class="col-1">
            <div class="d-grid">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

<table class="table table-borderless table-sm">
    <thead>
        <tr>
            <th scope="col" class="em-2">#</th>
            <th scope="col" class="em-6 text-center">Details</th>
            <th scope="col" class="em-25">Group</th>
            <th scope="col">Title (or URL)</th>
        </tr>
    </thead>
    <tbody>
        @{
            var bookmarks = this.Model.GetBookmarks();
            for (var index = 0; index < bookmarks.Count(); index++)
            {
                var item = bookmarks[index];
                <tr>
                    <td scope="row">@(index + 1).</td>
                    <td class="text-center">
                        <a href="#" title="View details" class="text-center" data-bs-toggle="collapse" data-bs-target="#collapse-@index" aria-expanded="false" aria-controls="collapse-@index">
                            <i class="bi bi-arrow-clockwise"></i>
                        </a>
                    </td>
                    <td>
                        @{
                            var buttonText = string.IsNullOrWhiteSpace(item.Group) ? "Select" : item.Group;
                            var buttonId = $"dropdownMenuGroup-{index}";
                            <div class="dropdown">
                                <div class="truncate dropdown-toggle" type="button" id="@buttonId" data-item-id="@item.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                    @buttonText
                                </div>
                                <ul class="dropdown-menu" id="accordion-add-to-group" aria-labelledby="@buttonId">
                                    @{
                                        var groups = this.Model?.GetGroups() ?? Array.Empty<BookmarkListModel.GroupSelect>();
                                        foreach (var group in groups)
                                        {
                                            <li><a class="dropdown-item" href="#" data-group-id="@group.Id">@group.Name</a></li>
                                        }

                                        <li><hr class="dropdown-divider"></li>
                                        <li><a class="dropdown-item" href="#">Clear</a></li>
                                    }
                                </ul>
                            </div>
                        }
                    </td>
                    <td>
                        <a href="@item.Url" target="_blank">
                            <span class="truncate" title="@this.GetUrlOrTitleHint(item)">
                                @this.GetUrlOrTitle(item)
                            </span>
                        </a>
                    </td>
                </tr>
                <tr>
                    <td colspan="4" class="p-0">
                        <div class="collapse" id="collapse-@index">
                            <div class="card ml-4 p-2">
                                <div class="card-body">
                                    @this.GetItemDescription(item)
                                </div>
                                <div class="card-footer">
                                    <a title="Edit" class="btn btn-primary" href="/bookmark/edit/@item.Id">Modify</a>
                                    <a class="btn btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#confirmDeleteleModal" data-item-id="@item.Id">Delete</a>
                                    <a class="btn btn-secondary float-end" href="/bookmark/groups">Groups</a>
                                </div>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="modal fade" id="confirmDeleteleModal" tabindex="-1" aria-labelledby="confirmDeleteleModalLabel" data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-danger">
                <h5 class="modal-title" id="confirmDeleteleModalLabel">Please, confirm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Do you want to delete this bookmark? The operation is irevertible.
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-delete" class="btn btn-danger" data-bs-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/accordion-patch.css" asp-append-version="true" />
}

@section Scripts {
    <script>
        $('.dropdown-menu#accordion-add-to-group li a').on('click', function () {
            var selText = $(this).text();
            if (selText === 'Clear') selText = 'Select';
            var toggle = $(this).parents('.dropdown').find('.dropdown-toggle');
            var itemId = $(toggle).attr('data-item-id');
            var groupId = $(this).attr('data-group-id');
            $(toggle).html(selText + ' <span class="caret"></span>');
            $.post('/bookmark/setgroup/' + itemId, { groupId: groupId });
        });

        $('.dropdown-menu#filter-select-group li a').on('click', function () {
            var selText = $(this).text();
            if (selText === 'All') selText = 'All';
            var toggle = $(this).parents('.dropdown').find('.dropdown-toggle');
            var itemId = $(toggle).attr('data-item-id');
            var groupId = $(this).attr('data-group-id');
            $(toggle).html(selText + ' <span class="caret"></span>');
            if (selText === 'All')
                window.location.href = '/bookmark/index/';
            else
                window.location.href = '/bookmark/index/?group=' + selText;
        });

        $('button#search-button').on('click', function (e) {
            e.preventDefault();
            var searchText = $('input#search-input').val();
            window.location.href = '/bookmark/index/?search=' + searchText;
        });

        $('button#clear-search-button').on('click', function (e) {
            e.preventDefault();
            window.location.href = '/bookmark/index/';
        });

        $('td a').on('click', function () {
            $('i', this).toggleClass('bi-arrow-counterclockwise');
            $('i', this).toggleClass('bi-arrow-clockwise');
        });

        $('#confirmDeleteleModal').on('show.bs.modal', function (e) {
            var button = e.relatedTarget;
            var id = $(button).attr('data-item-id');
            $('#btn-delete', this).attr('data-item-id', id);
        });

        $('#btn-delete').on('click', function () {
            var id = $(this).attr('data-item-id');
            $.post('/bookmark/delete/' + id, function () {
                window.location.href = '/bookmark/index';
            });
        });
    </script>
}

@functions {
    IHtmlContent GetString(IHtmlContent content)
    {
        using (var writer = new StringWriter())
        {
            content.WriteTo(writer, HtmlEncoder.Default);
            return Html.Raw(HttpUtility.HtmlDecode(writer.ToString()));
        }
    }

    IHtmlContent GetItemDescription(BookmarkModel bookmark)
    {
        return Html.Raw(CommonMarkConverter.Convert(bookmark.Description));
    }

    IHtmlContent GetUrlOrTitle(BookmarkModel bookmark)
    {
        return new HtmlString(string.IsNullOrEmpty(bookmark.Title) ? bookmark.Url : bookmark.Title);
    }

    IHtmlContent GetUrlOrTitleHint(BookmarkModel bookmark)
    {
        return new HtmlString(string.IsNullOrEmpty(bookmark.Title) ? string.Empty : bookmark.Url);
    }
}