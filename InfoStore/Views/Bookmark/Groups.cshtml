@model InfoStore.Models.GroupModel

@{
    ViewData["Title"] = "AddGroup";
    var mode = this.Model.Id == Guid.Empty ? "Add" : "Update";
}

<h1>Bookmark Groups</h1>

<hr />
<div class="row">
    <div class="col-3">
        <div class="card">
            <div class="card-header">
                Groups
            </div>
            <div class="card-body">
                <div class="dropdown">
                    <ul class="dropdown-menu">
                        @if (this.Model.Groups?.Any() ?? false)
                        {
                            foreach (var item in this.Model.Groups)
                            {
                                <li><a class="dropdown-item" href="/bookmark/groups/@item.Id">@item.Name</a></li>
                            }
                        }
                        else
                        {
                            <li>
                                No groups defines so far
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="card-footer">
                Bookmarks: @(this.Model.Bookmarks?.Count() ?? 0)
            </div>
        </div>
    </div>
    <div class="col-9">
        <form asp-action="Groups">
            <input name="bookmarkId" type="hidden" value=@this.TempData["bookmarkId"] />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                <input asp-for="Name" class="form-control" placeholder="@nameof(GroupModel.Name)" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" id="id-group-editor" rows="4" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group mb-3 float-end">
                @if (this.Model.Bookmarks?.Count() == 0)
                {
                    <a class="btn btn-danger" href="#" data-bs-toggle="modal" data-bs-target="#confirmDeleteleModal">Delete</a>
                }

                @if (this.IsUpdating(this.Model))
                {
                    <a class="btn btn-primary" href="/bookmark/groups/">Clear</a>
                }

                <input type="submit" value="@mode" class="btn btn-primary" />
                <a asp-asp-controller="Bookmark" asp-action="Index" type="button" class="btn btn-secondary">Go&nbsp;Back</a>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="confirmDeleteleModal" tabindex="-1" aria-labelledby="confirmDeleteleModalLabel" data-bs-backdrop="static" data-bs-keyboard="false" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header text-danger">
                <h5 class="modal-title" id="confirmDeleteleModalLabel">Please, confirm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Do you want to delete '@this.Model.Name' group? The operation is irevertible.
            </div>
            <div class="modal-footer">
                <button type="button" id="btn-delete" class="btn btn-danger" data-bs-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>

@section Styles
    {
    <link rel="stylesheet" href="~/lib/easymde/dist/easymde.min.css" asp-append-version="true" />
    <style>
        td {
            border: none;
        }

        .card-header {
            padding-bottom: .25rem;
        }

        .card-footer {
            padding-top: .25rem;
        }

        .dropdown-menu {
            position: static;
            display: block !important;
            padding: inherit;
        }

        .dropdown ul {
            border: none;
        }

        .dropdown .dropdown-item {
            padding: 0;
        }
    </style>
}

@section Scripts
    {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/lib/easymde/dist/easymde.min.js"></script>
    <script>
        const easyMDE = new EasyMDE({ element: document.getElementById('id-group-editor') });
        $('#btn-delete').on('click', function () {
            $.post('/bookmark/deletegroup/@this.Model.Id', function () {
                window.location.href = '/bookmark/groups/';
            });
        });
    </script>
}

@functions {
    bool IsUpdating(GroupModel model)
    {
        return model.Id != Guid.Empty;
    }
}